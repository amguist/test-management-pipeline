triggers:
  - cron:
      spec: "*/1 * * * *"
      entryPoint: githubPRCleanup

flows:
  githubPRCleanup:
    - log: "Cleaning up existing pull requests created based on IMA testing"
    - set:
        githubToken: "${crypto.exportAsString('Hawkeye', 'github_token', null)}"
        secretValue: "${crypto.exportAsString('Hawkeye', 'hawkeye-kitt-pr-repos', null)}"
        imaUserName: "amguist"
        githubProducts: []

    - expr: ${secretValue.split(",")}
      out: productNames
    - call: initialize-repo-list
      withItems: ${productNames}
    - call: perform-cleanup
      withItems: ${githubProducts}

  initialize-repo-list:
    - set:
        product:
          productName: ${item}
    - ${githubProducts.add(product)}

  perform-cleanup:
    - set:
        projectName: ${item.productName}
    - log: "Cleaning up repository: ${projectName}"
    - expr: ${"https://github.com/".concat(organization).concat("/").concat(item.productName).concat(".git")}
      out: apiUrl
    - task: github
      in:
        action: getPRList
        accessToken: ${githubToken}
        org: ${organization}
        repo: ${item.productName}
        base: "main"
        state: "open"
    - if: ${prList.isEmpty()}
      then:
        - log: "No Open PRs to pull details for ..."
      else:
        - expr: ${prList.stream().filter(i -> i.user.login.equals(imaUserName) && i.head.ref.contains("-IMA")).map(c -> {'number':c.number,'branch':c.head.ref,'createTs':c.createdAt}).toList()}
          out: retrievedPullRequests
        - call: clean
          withItems: ${retrievedPullRequests}

  clean:
    - set:
        durationInMinutes: 0
