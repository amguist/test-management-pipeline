flows:
  parallelExecutionMain:
    - set:
        githubToken: "${crypto.exportAsString('neoworkz', 'github_token', null)}"
        pullRequests: [ ]
    - log: "Deployment Concord Pipeline | Parallel Execution has been invoked ...."
    - checkpoint: "Start Parallel Execution"
    - call: manage-repositories
      withItems: ${productRepositories}
    - checkpoint: "Test_Approval"
    - form: parallelApproval
      values:
        branch: ${branch}
        executedBy: "${currentUser.username}"
        libraryName: ${libraryName}
        libraryVersion: ${libraryVersion}
        libraryProjects: ${productRepositories}
        organization: ${organization}
        processId: ${txId}
        pullRequestsDetails: ${pullRequests}
        githubToken: ${githubToken}
    - checkpoint: "Initiate_${branch}_Cleanup"
    - call: cleanup-repositories
      withItems: ${productRepositories}

  cleanup-repositories:
    - call: performCleanupOperations
      in:
        projectName: ${item.product}

  manage-repositories:
    - call: verifyGithubBranch
      in:
        projectName: ${item.product}

  verifyGithubBranch:
    - call: performGithubOperations
      in:
        entityName: branch
        actionName: getBranchList
        responseFieldName: branchList
        entityId: ${branch}
        projectName: ${projectName}